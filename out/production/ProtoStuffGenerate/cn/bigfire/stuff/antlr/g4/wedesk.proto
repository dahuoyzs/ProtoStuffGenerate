syntax = "proto3"; // 指定使用的语法版本
package cn.bigfire.wedesk.pb;
option optimize_for = SPEED;
option java_outer_classname = "Wedesk";
option java_multiple_files = true;

/* --------------------------------------------------------------------------- */
/*
    public static final byte COMMON_RESPONSE = 0x00;                // 常规应答
    public static final byte HEARTBEAT = 0x01;                      // 心跳包
    public static final byte CONTROL_REQUEST = 0x02;                // 请求控制
    public static final byte CONTROL_RESPONSE = 0x03;               // 请求控制包的应答
    public static final byte CLOSE_REQUEST = 0x04;                  // 关闭控制
    public static final byte CLOSE_RESPONSE = 0x05;                 // 关闭控制包的应答（未启用）
    public static final byte HID_COMMAND = 0x06;                    // 人机接口指令
    public static final byte SCREENSHOT = 0x07;                     // 屏幕截图

    public static final byte SET_CLIPBOARD = 0x08;                  // 设置剪切板内容
    public static final byte SET_CLIPBOARD_RESPONSE = 0x09;         // 设置剪切板内容的应答
    public static final byte GET_CLIPBOARD = 0x10;                  // 获取剪切板内容
    public static final byte GET_CLIPBOARD_RESPONSE = 0x11;         // 获取剪切板内容的应答
    public static final byte LIST_FILES = 0x12;                     // 获取文件列表
    public static final byte LIST_FILES_RESPONSE = 0x13;            // 获取文件列表的应答
    public static final byte DOWNLOAD_FILE = 0x14;                  // 下载文件
    public static final byte DOWNLOAD_FILE_RESPONSE = 0x15;         // 下载文件的应答
    public static final byte UPLOAD_FILE = 0x16;                    // 上传文件
    public static final byte UPLOAD_FILE_RESPONSE = 0x17;           // 上传文件的应答

    public static final byte AUTHENTICATE = 0x18;                   // 客户端认证
    public static final byte AUTHENTICATE_RESPONSE = 0x19;          // 客户端认证应答

    public static final byte TYPE_MOUSE = 0x01;                     // 类型：鼠标
    public static final byte TYPE_KEYBOARD = 0x02;                  // 类型：键盘
*/

//enum 这里的大小是指序列化后的大小，而不是在消息定义中的大小。在消息定义中，枚举总是以int32的形式定义，即4个字节，但序列化后的大小取决于实际使用的数值范围和类型。
enum Cmd {
  CMD_UNKNOWN = 0;
  CMD_PING = 1;
  CMD_HEART = 2;
  //0-20系统级别请求

  //20-x 业务请求
  CMD_REGISTER_REQ = 20;
  CMD_LOGIN_REQ = 21;

  CMD_CONTROL_OPEN_REQ = 22;
  CMD_SCREENSHOT_DATA = 23;
  CMD_CONTROL_MOUSE_REQ = 24;
  CMD_CONTROL_KEY_BOARD_REQ = 25;
  CMD_CONTROL_CLIPBOARD_READ_REQ = 26;
  CMD_CONTROL_CLIPBOARD_WRITE_REQ = 27;
  CMD_CONTROL_FILE_LIST_REQ = 28;
  CMD_CONTROL_FILE_DOWN_REQ = 29;
  CMD_CONTROL_FILE_UPLOAD_REQ = 30;
  CMD_CONTROL_CLOSE_REQ = 31;

}

enum Type {
  TYPE_UNKNOWN = 0;
  //1-9  文本类
  TYPE_JSON_OBJECT = 1;
  TYPE_JSON_ARRAY = 2;
  TYPE_XML = 3;
  //10-19  媒体类
  TYPE_IMG = 10;
  TYPE_AUDIO = 11;
  TYPE_VIDEO = 12;

  //20-x protobuf类型对象   TYPE_+类名   下面写好类,直接把类名复制到TYPE_后即可。
  TYPE_Empty = 20;
  TYPE_Err = 21;
  TYPE_Ping = 22;
  TYPE_Pong = 23;
  TYPE_HeartReq = 24;
  TYPE_HeartRes = 25;
  TYPE_RegisterReq = 26;
  TYPE_RegisterRes = 27;
  TYPE_LoginReq = 28;
  TYPE_LoginRes = 29;

//  TYPE_CtrlLisReq = 30;//参数为空
  TYPE_CtrlListRes = 31;
  TYPE_CtrlExecReq = 32;
  TYPE_CtrlExecRes = 33;

}

message Empty{}

message Err{
  int32 err_code = 1;//错误状态码
  string err_msg = 2;//错误信息
  string exception_msg = 3;//服务器异常信息
}

message Ping{}
message Pong{}

message HeartReq{}
message HeartRes{}

message RegisterReq{
  string username = 1;//用户名
  string password = 2;//密码
  string password2 = 3;//密码2次确认
}

message RegisterRes{
  string username = 1;//用户名
  int32 register_way = 2;//注册方式 1pc 2手机
  int64 register_time = 4;//注册时间
  int64 update_time = 5;//更新时间
}

message LoginReq{
  string username = 1;//用户名
  string password = 2;//密码
  int32 login_way = 3;//登录方式 1app 2web
  DeviceInfo device_info = 4;//用户登录时的设备信息
}

message DeviceInfo {
  string os_arch = 1;//系统架构
  string os_name = 2;//系统名词
  string user_name = 3;//电脑用户名
  string user_home_dir = 4;//电脑home目录
  string user_curr_dir = 5;//电脑curr目录
  string user_temp_dir = 6;//电脑temp目录
  string user_country = 7;//电脑国家
  string host_name = 8;//host用户名
  string mac_address = 9;//mac地址
  string processor = 10;//处理器信息
  string memory = 11;//内存信息
  repeated string disk_list = 12;//磁盘信息
}

message LoginRes{
  string username = 1;//用户名
  int32 age = 2;//年龄
  int32 sex = 3;//性别
  int32 register_way = 4;//注册方式 1pc 2手机
  int64 register_time = 5;//注册时间
  int64 update_time = 6;//性别
  map<string,DeviceInfo> online_devices = 7;//在线设备
}

message CtrlListRes{
  string username = 1;//用户名
  map<string,DeviceInfo> online_devices = 2;//在线设备
}


message CtrlExecReq {
  string from_cid = 1;//
  string to_cid = 2;//
  int32 type = 3;//1开启2关闭3鼠标事件4键盘事件5c剪切板数据6v剪切板数据7
  string param = 4;//
}

message CtrlExecRes {
  string from_cid = 1;//
  string to_cid = 2;//
  int32 type = 3;//
  string param = 4;//
  string result_status = 5;//
  string result_data = 6;//
}

message Img {
  int32 width = 1;//宽
  int32 height = 2;//高
  bytes data = 3;//数据
}







